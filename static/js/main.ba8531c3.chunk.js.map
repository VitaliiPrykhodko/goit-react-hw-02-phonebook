{"version":3,"sources":["Form/Form.js","Contacts/ContactsList.js","Filter/Filter.js","App.js","index.js"],"names":["Form","name","number","handleChange","handleAddContact","className","onChange","value","type","pattern","title","required","onClick","ContactList","contacts","handleDeleteContact","map","key","Filter","filter","handleFilter","App","state","e","currentTarget","setState","resetState","find","contact","alert","shortid","generate","contactId","prevState","this","normalizeFilter","toLowerCase","foundContacts","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba8531c3.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Form = ({ name, number, handleChange, handleAddContact }) => {\r\n  return (\r\n    <form className=\"form_contact\">\r\n      <label className=\"form_label\">\r\n        Name\r\n        <input\r\n          onChange={handleChange}\r\n          value={name}\r\n          className=\"input_contact\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n      <label className=\"form_label\">\r\n        Number\r\n        <input\r\n          onChange={handleChange}\r\n          value={number}\r\n          className=\"input_contact\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"button\" className=\"btn_contact\" onClick={handleAddContact}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  handleAddContact: PropTypes.func.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({contacts, handleDeleteContact}) => {\r\n    return (\r\n        <ul className=\"contact_list\">\r\n            {contacts.map(({key, name, number}) => {\r\n                return (\r\n                    <li key={key} className=\"contact_item\">\r\n                        <span>{name}</span>: <span>{number}</span>\r\n                        <button className=\"contact_btn\" onClick={()=>handleDeleteContact(key)}>Delete</button>\r\n                    </li>\r\n                )\r\n            })}\r\n          </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        key: PropTypes.node.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    }))\r\n}\r\nexport default ContactList","import PropTypes from \"prop-types\";\r\n\r\nconst Filter= ({filter, handleFilter}) => {\r\n    return (\r\n        <div className=\"filter_box\">\r\n             <label className=\"filter_label\">\r\n        Find contacts by name\r\n        <input\r\n          onChange={handleFilter}\r\n          value={filter}\r\n          className=\"input_contact input_filter\"\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    handleFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport Form from \"./Form/Form.js\";\r\nimport ContactList from \"./Contacts/ContactsList\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { key: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { key: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { key: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { key: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    const { value } = e.currentTarget;\r\n    this.setState({\r\n      filter: value,\r\n    });\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  handleAddContact = () => {\r\n    this.resetState();\r\n    const { contacts, name, number } = this.state;\r\n    if (\r\n      contacts.find((contact) => {\r\n        return contact.name === name || contact.number === number;\r\n      })\r\n    )\r\n      return alert(`${name} is already in contacts`);\r\n\r\n    if (name === \"\" || number === \"\") return alert(\"Please enter correct name\");\r\n    else {\r\n      this.setState({\r\n        contacts: [\r\n          ...contacts,\r\n          {\r\n            key: shortid.generate(),\r\n            name: name,\r\n            number: number,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDeleteContact = (contactId) => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.key!==contactId)\r\n    }))\r\n  }\r\n\r\n  render() {\r\n    const { name, number, contacts, filter } = this.state;\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    const foundContacts = contacts.filter((contact) => {\r\n      return contact.name.toLowerCase().includes(normalizeFilter);\r\n    });\r\n\r\n    return (\r\n      <div className=\"App\">\r\n         <h1>Phonebook</h1>\r\n        <Form\r\n          name={name}\r\n          number={number}\r\n          handleChange={this.handleChange}\r\n          handleAddContact={this.handleAddContact}\r\n        />\r\n          <h2 className=\"contact_title\">Contacts</h2>\r\n          <Filter filter={filter} handleFilter={this.handleFilter} />\r\n          <ContactList contacts={foundContacts} handleDeleteContact= {this.handleDeleteContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './main.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}