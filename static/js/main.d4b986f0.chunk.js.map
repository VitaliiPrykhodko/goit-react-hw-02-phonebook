{"version":3,"sources":["Form/Form.js","Contacts/ContactsList.js","Filter/Filter.js","App.js","index.js"],"names":["Form","state","name","number","handleChange","e","currentTarget","value","setState","handleClick","resetState","props","onClick","this","className","onChange","type","pattern","title","required","Component","ContactList","contacts","handleDeleteContact","map","key","Filter","filter","handleFilter","App","handleAddContact","find","contact","alert","shortid","generate","contactId","prevState","normalizeFilter","toLowerCase","foundContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4b986f0.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { name, number } = this.state;\r\n    this.resetState()\r\n    this.props.onClick(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"form_contact\">\r\n        <label className=\"form_label\">\r\n          Name\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={name}\r\n            className=\"input_contact\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className=\"form_label\">\r\n          Number\r\n          <input\r\n            onChange={this.handleChange}\r\n            value={number}\r\n            className=\"input_contact\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn_contact\"\r\n          onClick={this.handleClick}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({contacts, handleDeleteContact}) => {\r\n    return (\r\n        <ul className=\"contact_list\">\r\n            {contacts.map(({key, name, number}) => {\r\n                return (\r\n                    <li key={key} className=\"contact_item\">\r\n                        <span>{name}</span>: <span>{number}</span>\r\n                        <button className=\"contact_btn\" onClick={()=>handleDeleteContact(key)}>Delete</button>\r\n                    </li>\r\n                )\r\n            })}\r\n          </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.shape({\r\n        key: PropTypes.node.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired\r\n    }))\r\n}\r\nexport default ContactList","import PropTypes from \"prop-types\";\r\n\r\nconst Filter= ({filter, handleFilter}) => {\r\n    return (\r\n        <div className=\"filter_box\">\r\n             <label className=\"filter_label\">\r\n        Find contacts by name\r\n        <input\r\n          onChange={handleFilter}\r\n          value={filter}\r\n          className=\"input_contact input_filter\"\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    handleFilter: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport Form from \"./Form/Form.js\";\r\nimport ContactList from \"./Contacts/ContactsList\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { key: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { key: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { key: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { key: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  handleFilter = (e) => {\r\n    const { value } = e.currentTarget;\r\n    this.setState({\r\n      filter: value,\r\n    });\r\n  };\r\n\r\n  handleAddContact = (name, number) => {\r\n    const { contacts } = this.state;\r\n    if (\r\n      contacts.find((contact) => {\r\n        return contact.name === name || contact.number === number;\r\n      })\r\n    )\r\n      return alert(`${name} is already in contacts`);\r\n\r\n    if (name === \"\" || number === \"\") return alert(\"Please enter correct name\");\r\n    else {\r\n      this.setState({\r\n        contacts: [\r\n          ...contacts,\r\n          {\r\n            key: shortid.generate(),\r\n            name: name,\r\n            number: number,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  handleDeleteContact = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.key !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    const foundContacts = contacts.filter((contact) => {\r\n      return contact.name.toLowerCase().includes(normalizeFilter);\r\n    });\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <Form onClick={this.handleAddContact} />\r\n        <h2 className=\"contact_title\">Contacts</h2>\r\n        <Filter filter={filter} handleFilter={this.handleFilter} />\r\n        <ContactList\r\n          contacts={foundContacts}\r\n          handleDeleteContact={this.handleDeleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './main.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}